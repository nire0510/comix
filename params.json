{"name":"Comix","tagline":"Mixpanel driver library for web applications","body":"# Comix\r\nMixpanel driver library for web applications\r\n\r\n## Installation\r\n* Install **Comix** with npm:  \r\n`npm install comix`\r\n\r\n## Usage\r\n1. Include `comix.min.js` script file to the top of your page (`defer` or `async` attributes are not allowed):  \r\n`<script src=\"node_modules/comix/comix.min.js\"></script>`\r\n2. Add the following initialization code block to the bottom of your page:  \r\n  ```javascript\r\n  comix.init({\r\n    // (string) Your Mixpanel token:\r\n    token: '',\r\n    \r\n    // (object): Additional properties which are sent with every track event:\r\n    additional_properties: {},\r\n    \r\n    // (string) Attribute name which its value contains the event name for all track_links & track_forms events.\r\n    // (it should not match any existing track_custom events names):\r\n    attribute: 'data-comix',\r\n    \r\n    // (boolean) Should page view be tracked? the ebent name is the document's title:\r\n    track_pageview: false,\r\n    \r\n    // (boolean) Should links clicks be tracked? requires to have an attribute named {{ attribute }}:\r\n    track_links: false,\r\n    \r\n    // (boolean) Should forms submissions be tracked? requires to have an attribute named {{ attribute }}:\r\n    track_forms: false,\r\n    \r\n    // (boolean | [{}]) Should custom events be tracked? can be either false or an array of custom events otherwise:\r\n    track_custom: [\r\n      {\r\n        // (string) Selector of the elements you want to track:\r\n        selector: '[data-comix-click]',\r\n        \r\n        // (string) The DOM event which triggers the track event:\r\n        event: 'click',\r\n        \r\n        // (object) The name of the event which will be tracked:\r\n        name: {\r\n          // (string) Enumerator, could be either 'attribute', 'text' or 'function'\r\n          type: 'attribute',\r\n          \r\n          // if type is 'attribute' - value is the name of the attribute which its value is the event name,\r\n          // if type is 'text' - value is a string which is the event name,\r\n          // if type is 'function' - value is a function which its returned value is the event name:\r\n          value: 'data-comix-click'   \r\n        }\r\n      }\r\n    ]\r\n  });\r\n  ```\r\n3. If you set `track_links` or `track_forms` to `true`, make sure to add an attribute with the name specified in the `init` method.\r\n4. If you wish to track events programatically, you can use the `track` event:  \r\n  `comix.track('EVENT_NAME'[, {...}[, fncCallback]])`\r\n  * `'EVENT_NAME' (string)` - the event name\r\n  * `{...} (object)` - additional properties to add to the event (extra data) (optional)\r\n  * `fncCallback (function)` - callback function to call after the event successfully submitted (optional)\r\n\r\n## Contributing\r\n1. Fork it!\r\n2. Create your feature branch: `git checkout -b my-new-feature`\r\n3. Commit your changes: `git commit -am 'Add some feature'`\r\n4. Push to the branch: `git push origin my-new-feature`\r\n5. Submit a pull request :D\r\n\r\n## History\r\n* **0.1.2** Jul 16<sup>th</sup>, 2015\r\n  * New methods: trackCharge, disableEvents, registerEventsProperties, unregisterEventsProperties, identifyUser, registerUserProperties\r\n  * Modules refactoring\r\n  * More demos on test file\r\n* **0.0.4** Jul 14<sup>th</sup>, 2015 - First release\r\n\r\n## Credits\r\n* [Mixpanel](https://mixpanel.com/)\r\n* [Browserify](http://browserify.org/)\r\n\r\n## License\r\nMIT","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}